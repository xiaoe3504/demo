<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.psy.demo.mapper.IntelligentTestScaleMapper">
    <resultMap id="BaseResultMap" type="com.psy.demo.dto.IntelligentTestScaleDTO">
        <!--@mbg.generated-->
        <!--@Table intelligent_test_scale-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="is_free" jdbcType="VARCHAR" property="isFree"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
        <result column="sid" jdbcType="VARCHAR" property="sid"/>
        <result column="hash" jdbcType="VARCHAR" property="hash"/>
        <result column="cnt" jdbcType="BIGINT" property="cnt"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, `type`, `name`, title, is_free, avatar_url,sid,hash,cnt, create_time, update_time
    </sql>
    <select id="select" resultMap="BaseResultMap" parameterType="string">
        SELECT t.*
        FROM (SELECT `id`,
                     `type`,
                     `name`,
                     `title`,
                     `is_free`,
                     `avatar_url`,
                     `sid`,
                     `hash`,
                     (i.cnt + IFNULL(user_info_cnt, 0)) as cnt,
                     `create_time`,
                     `update_time`
              FROM (select *  from intelligent_test_scale
                           <where>
                               <if test="type != null and type != ''">
                                   type = #{type,jdbcType=VARCHAR}
                               </if>
                           </where>
                           ) i
                           LEFT JOIN (SELECT category,
                                             category_id,
                                             count(1) AS user_info_cnt
                                      FROM user_info_category_cnt
                                      GROUP BY category,
                                               category_id) u
                      ON u.category = 'TYPE_TEST'
                              AND u.category_id = i.id) t
        ORDER BY t.id
    </select>
</mapper>