<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.psy.demo.mapper.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.psy.demo.dto.UserInfoDTO">
        <!--@mbg.generated-->
        <!--@Table user_info-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="open_id" jdbcType="VARCHAR" property="openId"/>
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
        <result column="is_member" jdbcType="TINYINT" property="isMember"/>
        <result column="not_member_msg_cnt" jdbcType="BIGINT" property="notMemberMsgCnt"/>
        <result column="expires_time" jdbcType="TIMESTAMP" property="expiresTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, open_id, phone_number, nick_name, `password`, avatar_url, create_time, update_time
    </sql>

    <delete id="deleteByOpenId" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete
        from user_info
        where open_id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.psy.demo.dto.UserInfoDTO"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into user_info (open_id, phone_number, nick_name,
                               `password`, avatar_url, create_time,
                               update_time)
        values (#{openId,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertOrUpdate">
        INSERT INTO user_info (open_id, phone_number, nick_name,
                               `password`, avatar_url)
        VALUES (#{openId,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR})
        ON DUPLICATE KEY UPDATE nick_name = VALUES(nick_name),avatar_url = VALUES(avatar_url);
    </insert>

    <select id="getDTOByOpenId" resultMap="BaseResultMap">
        select *
        from user_info
        <where>
            open_id = #{openId,jdbcType=VARCHAR}
        </where>
    </select>

    <update id="updateIsMemberByOpenId" parameterType="com.psy.demo.dto.UserInfoDTO">
        update user_info
        <set>
            `is_member`    = 1,
            `expires_time` = DATE_ADD(expires_time, INTERVAL 1 YEAR),
        </set>
        <where>
            open_id = #{openId,jdbcType=VARCHAR}
        </where>
    </update>

    <update id="dealIsMemberExpiresTime">
        update user_info
        <set>
            `is_member` = 0
        </set>
        <where>
            is_member = 1
                    and NOW() > expires_time
        </where>
    </update>

    <update id="initNotMemberMsgCnt">
        update user_info
        <set>
            `not_member_msg_cnt` = 0
        </set>
        <where>
            is_member = 0
        </where>
    </update>

    <update id="updateNotMemberMsgCnt" parameterType="string">
        update user_info
        <set>
            `not_member_msg_cnt` = not_member_msg_cnt + 1
        </set>
        <where>
            is_member = 0 and open_id = #{openId,jdbcType=VARCHAR}
        </where>
    </update>
</mapper>